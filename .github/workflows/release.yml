name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      tag_name: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - id: vars
        run: |
          echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Generate release notes
        run: |
          chmod +x scripts/generate-release-notes.sh
          TAG=${GITHUB_REF_NAME} scripts/generate-release-notes.sh RELEASE_BODY.md
          echo "Generated RELEASE_BODY.md:"; echo "===="; sed -n '1,120p' RELEASE_BODY.md || true

      - id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: U-Download ${{ github.ref_name }}
          draft: true
          body_path: RELEASE_BODY.md

  build:
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ''
          - platform: macos-latest
            args: '--target aarch64-apple-darwin'
          - platform: macos-latest
            args: '--target x86_64-apple-darwin'
          - platform: windows-latest
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ contains(matrix.platform, 'macos') && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Linux dependencies
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Build and upload with Tauri Action
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.prepare.outputs.release_id }}
          args: ${{ matrix.args }}
          releaseDraft: true
          tauriScript: npm run tauri
